import { ICreateAuthorizationHeader, ICreateSigningString, ISignMessage, IVerifyMessage, IsHeaderValid, CreateVLookupSignature } from '../types';
export declare const createSigningString: ({ message, created, expires }: ICreateSigningString) => Promise<{
    signingString: string;
    created: string;
    expires: string;
}>;
export declare const signMessage: ({ signingString, privateKey }: ISignMessage) => Promise<string>;
export declare const createAuthorizationHeader: ({ body, privateKey, subscriberId, subscriberUniqueKeyId, expires, created, }: ICreateAuthorizationHeader) => Promise<string>;
export declare const verifyMessage: ({ signedString, signingString, publicKey }: IVerifyMessage) => Promise<boolean>;
export declare const isHeaderValid: ({ header, body, publicKey }: IsHeaderValid) => Promise<boolean>;
export declare const createVLookupSignature: ({ country, domain, type, city, subscriber_id, privateKey, }: CreateVLookupSignature) => Promise<string>;
